syntax = "proto3";

package erutan;

option java_multiple_files = true;
option java_package = "com.erutan";
option java_outer_classname = "Erutan";
option csharp_namespace = "Erutan.Scripts.Protos";
import "google/protobuf/timestamp.proto";

/*
    The Erutan service.
    Allows you to actually play the game.
*/
service Erutan {
    /*
    Blabla
    */
    rpc Stream(stream Packet) returns (stream Packet) {}
}

message Metadata {
    google.protobuf.Timestamp timestamp = 1;
}


message NetVector3 {
    double x = 1;
    double y = 2;
    double z = 3;
}

message NetQuaternion {
    double x = 1;
    double y = 2;
    double z = 3;
    double w = 4;
}

message Statistics {
    double average = 1;
    double minimum = 2;
    double maximum = 3;
}

// Data-oriented design like
message Component {
    oneof type {
        SpaceComponent space = 1;
        SpaceTimeComponent space_time = 2;
        HealthComponent health = 3;
        SpeedComponent speed = 4;
        RenderComponent render = 5;
        BehaviourTypeComponent behaviour_type = 6;
    }
    message SpaceComponent {
        NetVector3 position = 1;
        NetQuaternion rotation = 2;
        NetVector3 scale = 3;
    }
    message SpaceTimeComponent {
        google.protobuf.Timestamp timestamp = 1;
        SpaceComponent space = 2;
    }
    message HealthComponent {
        double life = 1;
    }
    message SpeedComponent {
        double move_speed = 1;
    }
    message TargetComponent {
        NetVector3 target = 1;
    }
    message RenderComponent {
        float red = 1;
        float green = 2;
        float blue = 3;
    }
    message BehaviourTypeComponent {
        enum BehaviourType {
            ANIMAL = 0;
            VEGETATION = 1;
        }
        BehaviourType behaviour_type = 1;
    }
}

message Packet {
    Metadata metadata = 1;

    oneof type {
        // General physical entitys
        CreateEntityPacket create_entity = 2;
        UpdateEntityPacket update_entity = 3;
        UpdatePositionPacket update_position = 4;
        UpdateRotationPacket update_rotation = 5;
        DestroyEntityPacket destroy_entity = 6;

        // Animals & Environment
        UpdateAnimalPacket update_animal = 7;

        // Server general
        UpdateParametersPacket update_parameters = 8;
        StatisticsPacket statistics = 9;
    }

    message CreateEntityPacket {
        uint64 entity_id = 1;
        repeated Component components = 2; 
    }

    message UpdateEntityPacket {
        uint64 entity_id = 1;
        repeated Component components = 2; 
    }

    message UpdatePositionPacket {
        uint64 entity_id = 1;
        NetVector3 position = 2;
    }

    message UpdateRotationPacket {
        uint64 entity_id = 1;
        NetQuaternion rotation = 2;
    }

    message DestroyEntityPacket {
        uint64 entity_id = 1;
    }

    message UpdateAnimalPacket { // Maybe will have more params later
        uint64 entity_id = 1;
        double life = 2;
    }

    message UpdateParametersPacket {
        repeated Parameter parameters = 1;
        message Parameter {
            oneof type {
                double time_scale = 1;
            }
        }
    }

    message StatisticsPacket {
        Statistics speed = 1;
        Statistics life = 2;
    }
}
